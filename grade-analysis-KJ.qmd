---
title: "grade-analysis-KJ"
format: html
editor: visual
---

```{r}
#| message: false
here::i_am("r-101-grade-analysis.Rproj")
library(here)
library(vroom)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
```

### Q1 Load Data

```{r}
grades <- vroom(here("grades.csv"))
```
### Q2 Exam Statistics

```{r}
exam_stats <- grades |>  summarise(
    min_exam = min(Exam, na.rm = TRUE),
    max_exam = max(Exam, na.rm = TRUE),
    mean_exam = mean(Exam, na.rm = TRUE),
    median_exam = median(Exam, na.rm = TRUE))

knitr::kable(exam_stats, caption = "Statistics for Exam Variable")
```

### Q3 Students without Final Exam

```{r}
no_final_exam <- grades |> 
  filter(is.na(Exam)) |>
  nrow()
```

There are **`r no_final_exam`** students who did not take the exam.

### Q4 Exam Grades Distribution

```{r}
grades |> 
  filter(!is.na(Exam)) |>
  ggplot(aes(x=Exam)) + 
  geom_histogram(bins = 30, colour = "white", fill="black") +
  scale_x_continuous(name="Exam Grades")
```

### Q5 No.of Students in Each Group

```{r}
group_number <- grades |> group_by(Group) |>
  summarise(Student_Count = n())

knitr::kable(group_number, caption = "Number of Students in Specific Group")
```

### Q6 Group-wise Representation

```{r}
group_number |>
  ggplot(aes(y=Student_Count, x=Group, width=.6)) + geom_col(fill="darkred") +
  scale_y_continuous(name="No. of Students", limits=c(0, 40)) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
```

### Q7 Grouped Exam Grade Distribution

We use two simple representations of histogram and bar graph as the data represented, **Exam Grades** is a discrete variable.

```{r}
#First Representation
grades |>
  filter(!is.na(Exam)) |>
  ggplot(aes(x=Exam)) + 
  geom_histogram(bins = 30) +
  scale_x_continuous(name="Exam Grades")+ scale_y_continuous(name="No. of Students")+
  facet_wrap(~Group)

#Second Representation
grades |>
  filter(!is.na(Exam)) |>
  ggplot(aes(x=Exam)) + 
  geom_bar() +
  scale_x_continuous(name="Exam Grades")+
  scale_y_continuous(name="No. of Students")+
  facet_wrap(~Group)
```
### Q8 Students Missing Exam

```{r}
missed_exam_count <- grades |>
  group_by(Group) |>
  summarise(Students_Missed_Exam = sum(is.na(Exam)))

missed_exam_count
```

### Q9 Graphical Representation of Missing Exams

```{r}
missed_exam_count |>
  ggplot(aes(x=Group, y=Students_Missed_Exam))+
  geom_col(color="white", fill="darkblue") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
```

### Q10 Transform Data to Long Format

```{r}
long_formatted_grades <- grades |>
  pivot_longer(cols = -c(Id, Group), 
               names_to = "name",
               values_to = "value")
```

### Q11 Missing Grades per Student

```{r}
missing_student_grades <- long_formatted_grades |>
  group_by(Id) |>
  summarise(Missing_Grades = sum(is.na(value)))

missing_student_grades
```

### Q12 Visualize Missing Grades Distribution

```{r}
missing_student_grades |>
  ggplot(aes(x=Missing_Grades)) + geom_bar(fill="darkred") +
  scale_y_continuous(name="No. of Students")
```

### Q13 Missing Exams by Group

```{r}
missing_group_grades <- long_formatted_grades |>
  group_by(Group) |>
  summarise(Students = sum(is.na(value)))

missing_group_grades
```

### Q14 Count Missing Online Test Grades

```{r}
online_missing_grades <- long_formatted_grades |>
  group_by(Id) |>
  filter(str_starts(name, "Online")) |>
  summarise(online_tests_missed = sum(is.na(value)))

online_missing_grades 
```





